T.c --> O(logn)
S.c --> O(n)

class TopVotedCandidate {
    HashMap<Integer,Integer> countvotes;
    HashMap<Integer, Integer> leadersmap;
    int[] times;
    public TopVotedCandidate(int[] persons, int[] times) {
        countvotes = new HashMap<>();
        leadersmap = new HashMap<>();
        this.times = times;
        int leader = persons[0];
        for(int i =0; i<persons.length; i++){
           countvotes.put(persons[i],countvotes.getOrDefault(persons[i],0)+1);
           if(countvotes.get(persons[i]) >= countvotes.get(leader)){
                leader = persons[i];
           }           
           leadersmap.put(times[i],leader);
        }
    }
   
    public int q(int t) {
       if(leadersmap.containsKey(t)){
        return leadersmap.get(t);
       }
       int low = 0; int high = times.length-1;
       while(low <= high){
        int mid = low+(high-low)/2;
        if(times[mid] > t){
           high = mid -1;
        }else{
            low = mid+1;
        }
       }
       return leadersmap.get(times[high]);
    }
}

/**
 * Your TopVotedCandidate object will be instantiated and called as such:
 * TopVotedCandidate obj = new TopVotedCandidate(persons, times);
 * int param_1 = obj.q(t);
 */